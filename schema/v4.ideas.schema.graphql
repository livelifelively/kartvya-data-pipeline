type Event_Established_Or_Dissolved {
    # commemorated as
    # date time
    # related events
    # from news sources
    # 
}

type Event_Made_Statement {
    # who made it
    # verbal or written
    # statement text
    # why said it - previous events - cause and effect (inverse node?)
    # people or organisations in the statement (departments/ministries)
    # date time
    # location - point to polygon - complete address
    # 
}

type Event_Administrative_Entity_Region_Update {
    # category
    # link to entity region e.g. rajasthan state_region
}

type Event_Administrative_Entity_Legal_Update {
    
}

##############################################
# schema with geo and regions. 
##############################################

type Language {
  id: ID!
  name_en: String! @id
  names: [String]
  scripts: [Script]
  wikidata_qid: String @search(by: [hash])
  wikipedia_page: String @search(by: [fulltext])
  # last update date of the wikipedia data.
  # if this date changed on wikipedia, we should consider updating
  wikipedia_page_data_version: DateTime
}

type Script {
  id: ID!
  name_en: String! @id
  names: [String]
  languages: [Language] @hasInverse(field: "scripts")
  wikidata_qid: String @search(by: [hash])
  wikipedia_page: String @search(by: [fulltext])
  # last update date of the wikipedia data.
  # if this date changed on wikipedia, we should consider updating
  wikipedia_page_data_version: DateTime
}

# instance of language + script combination.
type Language_Script {
  id: ID!
  name_en: String! @id
  language: Language!
  script: Script!
}

type Name {
  id: ID!
  language_script: Language_Script!
  name: String! @id @search(by: [hash, term, fulltext])

  # region: [Region]
  person: [Person]
  organisation: [Organisation]
  nation: [Nation]
  in_zonal_council: [IN_Zonal_Council]
}

enum Date_Time_Precision_Category {
  Year
  Month
  Day
  Hour
  Minute
  Second
}


enum DateTimePrecision {
  Year
  Month
  Day
  Hour
  Minute
  Second
}

enum KGEventCategory {
  Administrative_Entity_Established_On
  Administrative_Entity_Dissolved_On

  Nation_Region_Established_On
  Nation_Region_Dissolved_On

  Zonal_Council_Region_Established_On
  Zonal_Council_Region_Dissolved_On
  
  State_Region_Established_On
  State_Region_Dissolved_On

  Union_Territory_Region_Established_On
  Union_Territory_Region_Dissolved_On

  District_Region_Established_On
  District_Region_Dissolved_On
  
  Loksabha_Constituency_Region_Established_On
  Loksabha_Constituency_Region_Dissolved_On

  Vidhansabha_Constituency_Region_Established_On
  Vidhansabha_Constituency_Region_Dissolved_On

  National_Capital_City_Established_On
  National_Capital_City_Dissolved_On

  Union_Territory_Capital_City_Established_On
  Union_Territory_Capital_City_Dissolved_On

  State_Capital_City_Established_On
  State_Capital_City_Dissolved_On
}

# the WHEN
type KGDateTime {
  date_time_year: DateTime @search(by: [year])
  date_time_month: DateTime @search(by: [month])
  date_time_day: DateTime @search(by: [day])
  date_time_hour: DateTime @search(by: [hour])

  gregorian_year: String @search(by: [hash, exact])
  gregorian_month: String @search(by: [hash, exact])
  gregorian_day: String @search(by: [hash, exact])
  gregorian_hour_minute: String @search(by: [hash, exact])

  events: [KGEvent]
}

# the WHAT
type KGEvent {
  # is one time event or has a time range
  one_time_event_date_time: KGDateTime @hasInverse(field: "events")
  one_time_event_date_time_precision: DateTimePrecision @search(by: [exact])

  time_range_event_start_date_time: KGDateTime @hasInverse(field: "events")
  time_range_event_start_date_time_precision: DateTimePrecision @search(by: [exact])

  time_range_event_end_date_time: KGDateTime @hasInverse(field: "events")
  time_range_event_end_date_time_precision: DateTimePrecision @search(by: [exact])

  # place/region where the event happened
  event_source_regions
  # which regions are directly related to/impacted by this event?
  direct_impact_regions

  # related_events: 
  event_category: KGEventCategory @search(by: [exact])

  # description: 
}

type KGLocationOrRegion {
  # 
}

type KGHow {
  # 
}

type WikipediaIdentifier {
  wikidata_qid: String @search(by: [hash, exact])
  wikipedia_page_url: String @search(by: [fulltext])
  wikipedia_page_id: String @search(by: [fulltext, exact])

  # last update date of the wikipedia data.
  # if this date changed on wikipedia, we should consider updating
  wikipedia_page_data_version: DateTime @search(by: [hour])
}

type KGDateTime {
  date_time_hour: DateTime @search(by: [hour])
  date_time_precision: Date_Time_Precision_Category @search(by: [exact])

  events: [KGEvent]
}

type _Date_Time_ {
  id: ID!

  date_time: DateTime @search(by: [hour])
  date_time_precision: Date_Time_Precision_Category @search(by: [exact])

  nation_established: [_Nation_]
  in_state_established: [_Nation_]
  in_union_territory_established: [_Nation_]
  in_district_established: [_Nation_]
  in_vidhansabha_constituency_established: [_Nation_]
  in_loksabha_constituency_established: [_Nation_]

  nation_disestablishments: [_Nation_]
  in_state_disestablishments: [_Nation_]
  in_union_territory_disestablishments: [_Nation_]
  in_district_disestablished: [_Nation_]
  in_vidhansabha_constituency_disestablished: [_Nation_]
  in_loksabha_constituency_disestablished: [_Nation_]

  nation_region_established: [_Nation_]
  in_state_region_established: [_Nation_]
  in_union_territory_region_established: [_Nation_]
  in_district_region_established: [_Nation_]
  in_vidhansabha_constituency_region_established: [_Nation_]
  in_loksabha_constituency_region_established: [_Nation_]

  nation_established: [_Nation_]
  in_state_established: [_Nation_]
  in_union_territory_established: [_Nation_]
  in_district_established: [_Nation_]
  in_vidhansabha_constituency_established: [_Nation_]
  in_loksabha_constituency_established: [_Nation_]

  nation_established: [_Nation_]
  in_state_established: [_Nation_]
  in_union_territory_established: [_Nation_]
  in_district_established: [_Nation_]
  in_vidhansabha_constituency_established: [_Nation_]
  in_loksabha_constituency_established: [_Nation_]
}

type Nation {
  id: ID!
  name_id: String! @id

  names: [Name!]! @hasInverse(field: "nation")

  region: [Nation_Region]
}

# political regions associated with and within a nation
type Nation_Region {
  id: ID!

  nation: Nation @hasInverse(field: "region")

  capital: [National_Capital_City]

  zonal_council: [IN_Zonal_Council_Region] @hasInverse(field: "nation")
  state: [IN_State_Region] @hasInverse(field: "nation")
  union_territory: [IN_Union_Territory_Region] @hasInverse(field: "nation")

  # array because, there can be multiple version with varying precision.
  # low precision for maps, high precicion for search and computation
  geo_boundary_self_actual: [Geo]

  # boundaries recognized by the national authorities
  # e.g. PoK is part of India as per Indian government, although its not under GOI administration
  geo_boundary_self_official: [Geo]
  geo_boundary_world_official: [Geo]

  geo_zonal_council_boundary: [Geo]
  geo_state_boundary: [Geo]
}

type IN_Zonal_Council {
  id: ID!

  # id derived from name
  name_id: String! @id

  names: [Name!]! @hasInverse(field: "in_zonal_council")

  region: [IN_Zonal_Council_Region]
}

type IN_Zonal_Council_Region {
  id: ID!

  nation: Nation @hasInverse(field: "region")

  capital: [National_Capital_City]

  nation: [Nation_Region] @hasInverse(field: "zonal_council")
  state: [IN_State_Region] @hasInverse(field: "zonal_council")
  union_territory: [IN_Union_Territory_Region] @hasInverse(field: "zonal_council")
}

enum Location_Or_Region_Category {
  Location
  Region
}

# tile by tile geo information and how its related to political regions
type Geo {
  category: Location_Or_Region_Category @search(by: [exact])

  # if the category is location
  location: Point @search

  # if the category is region
  area: MultiPolygon @search
}

type Indian_Legal_Document {
  id: ID!

  # english title that can be searched
  name_id: String! @id @search(by: [hash, term, fulltext])

  # title in multiple languages
  names: [Name!]! @hasInverse(field: "indian_legal_document")

  description: String
  document_type: Indian_Legal_Document_Category! @search(by: [exact])

  is_notified: Boolean!

  active_version: Indian_Legal_Document_Version
  versions: [Indian_Legal_Document_Version]

  # indianJurisdictions: [IndianJurisdiction] @hasInverse
  # notifications
  # rules
  # regulations
  # orders
  # circulars
  # ordinance
  # statutes
  # bills

  # # origin state or union
  # union_or_state: Union | State
  # state: [IndianState]

  # notified_in_union: Boolean
  # notified_in_states: [IndianState]

  # ministry
  # department

  # policy domains or subjects
  # subject type - concurrent, union or state

  structural_elements: [Indian_Legal_Document_Structural_Element]
  amendments: [Indian_Legal_Document_Amendment]

  enactment_date: DateTime @search
  enforcement_date: DateTime @search
}